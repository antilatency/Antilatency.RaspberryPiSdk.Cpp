//Generated by AntilatencyApiGenerator
#pragma once
#ifndef ANTILATENCY_INTERFACE_CONTRACT_EXCEPTIONS_ENABLED
#define ANTILATENCY_INTERFACE_CONTRACT_EXCEPTIONS_ENABLED
#endif
#include <cstdint>
#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable: 4946)
#pragma warning(disable: 4265)
#endif
namespace Antilatency {
	namespace InterfaceContract {
		namespace Memory {
			struct Memory2 {
				uint8_t m0;
				uint8_t m1;
			};
		} //namespace Memory
	} //namespace InterfaceContract
} //namespace Antilatency

namespace Antilatency {
	namespace InterfaceContract {
		namespace Memory {
			struct Memory4 {
				Antilatency::InterfaceContract::Memory::Memory2 m0;
				Antilatency::InterfaceContract::Memory::Memory2 m1;
			};
		} //namespace Memory
	} //namespace InterfaceContract
} //namespace Antilatency

namespace Antilatency {
	namespace InterfaceContract {
		namespace Memory {
			struct Memory8 {
				Antilatency::InterfaceContract::Memory::Memory4 m0;
				Antilatency::InterfaceContract::Memory::Memory4 m1;
			};
		} //namespace Memory
	} //namespace InterfaceContract
} //namespace Antilatency

namespace Antilatency {
	namespace InterfaceContract {
		namespace Memory {
			struct Memory16 {
				Antilatency::InterfaceContract::Memory::Memory8 m0;
				Antilatency::InterfaceContract::Memory::Memory8 m1;
			};
		} //namespace Memory
	} //namespace InterfaceContract
} //namespace Antilatency

namespace Antilatency {
	namespace InterfaceContract {
		namespace Memory {
			struct Memory32 {
				Antilatency::InterfaceContract::Memory::Memory16 m0;
				Antilatency::InterfaceContract::Memory::Memory16 m1;
			};
		} //namespace Memory
	} //namespace InterfaceContract
} //namespace Antilatency


#ifdef _MSC_VER
#pragma warning(pop)
#endif
